# Generated by Django 5.2.4 on 2025-07-15 05:47

import django.db.models.deletion
from django.db import migrations, models


class Migration(migrations.Migration):

    initial = True

    dependencies = [
    ]

    operations = [
        migrations.CreateModel(
            name='College',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('official_name', models.CharField(help_text='Full official name of the college.', max_length=255, unique=True)),
                ('short_name', models.CharField(blank=True, help_text='Commonly used short name or acronym (e.g., IIT Delhi).', max_length=100, null=True, unique=True)),
                ('address', models.TextField(help_text='Full postal address of the college.')),
                ('city', models.CharField(max_length=100)),
                ('state', models.CharField(max_length=100)),
                ('pincode', models.CharField(blank=True, max_length=10, null=True)),
                ('official_website', models.URLField(blank=True, null=True)),
                ('email', models.EmailField(blank=True, max_length=255, null=True)),
                ('phone_number', models.CharField(blank=True, max_length=20, null=True)),
                ('established_year', models.IntegerField(blank=True, null=True)),
                ('campus_area_acres', models.DecimalField(blank=True, decimal_places=2, help_text='Campus area in acres.', max_digits=6, null=True)),
                ('ownership_type', models.CharField(choices=[('GOVT', 'Government'), ('PVT', 'Private'), ('DEEMED', 'Deemed University'), ('PSU', 'Public Sector Undertaking')], default='PVT', max_length=10)),
                ('description', models.TextField(blank=True, help_text='A brief description of the college.', null=True)),
            ],
            options={
                'ordering': ['official_name'],
            },
        ),
        migrations.CreateModel(
            name='Course',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('name', models.CharField(help_text='Name of the course (e.g., Computer Science and Engineering).', max_length=100, unique=True)),
                ('short_code', models.CharField(help_text='Short code for the course (e.g., CSE).', max_length=20, unique=True)),
            ],
            options={
                'ordering': ['name'],
            },
        ),
        migrations.CreateModel(
            name='CollegeCourse',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('intake_capacity', models.IntegerField(blank=True, help_text='Annual intake capacity for this course in this college.', null=True)),
                ('college', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='colleges.college')),
                ('course', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='colleges.course')),
            ],
            options={
                'unique_together': {('college', 'course')},
            },
        ),
        migrations.CreateModel(
            name='NIRFRanking',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('year', models.IntegerField(help_text='Year of the NIRF ranking.')),
                ('overall_rank', models.IntegerField(blank=True, help_text='Overall NIRF rank for the year.', null=True)),
                ('engineering_rank', models.IntegerField(blank=True, help_text='NIRF rank specifically for engineering discipline for the year.', null=True)),
                ('college', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='nirf_rankings', to='colleges.college')),
            ],
            options={
                'ordering': ['-year', 'engineering_rank'],
                'unique_together': {('college', 'year')},
            },
        ),
        migrations.CreateModel(
            name='PlacementData',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('year', models.IntegerField(help_text='Academic year for which placement data is recorded (e.g., 2023 for 2022-23 batch).')),
                ('highest_package_lpa', models.DecimalField(blank=True, decimal_places=2, help_text='Highest package in Lakhs Per Annum (LPA).', max_digits=6, null=True)),
                ('average_package_lpa', models.DecimalField(blank=True, decimal_places=2, help_text='Average package in Lakhs Per Annum (LPA).', max_digits=6, null=True)),
                ('median_package_lpa', models.DecimalField(blank=True, decimal_places=2, help_text='Median package in Lakhs Per Annum (LPA).', max_digits=6, null=True)),
                ('placement_percentage', models.DecimalField(blank=True, decimal_places=2, help_text='Percentage of students placed.', max_digits=5, null=True)),
                ('total_students', models.IntegerField(blank=True, help_text='Total number of students in the batch.', null=True)),
                ('students_placed', models.IntegerField(blank=True, help_text='Number of students placed.', null=True)),
                ('college', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='placement_data', to='colleges.college')),
            ],
            options={
                'ordering': ['-year'],
                'unique_together': {('college', 'year')},
            },
        ),
    ]
